[{"/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/index.js":"1","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/App.js":"2","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/reportWebVitals.js":"3","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/GamePage.js":"4","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/Questions.js":"5","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/Answers.js":"6","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/CorrectAnswer.js":"7","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/blobButton.js":"8"},{"size":500,"mtime":1609118097769,"results":"9","hashOfConfig":"10"},{"size":2613,"mtime":1609961169315,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609118097769,"results":"12","hashOfConfig":"10"},{"size":1363,"mtime":1609908334521,"results":"13","hashOfConfig":"10"},{"size":6009,"mtime":1609909449502,"results":"14","hashOfConfig":"10"},{"size":486,"mtime":1609119586775,"results":"15","hashOfConfig":"10"},{"size":233,"mtime":1609910146509,"results":"16","hashOfConfig":"10"},{"size":499,"mtime":1609959275675,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"c4egwa",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/index.js",[],["39","40"],"/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/App.js",["41"],"/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/reportWebVitals.js",[],"/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/GamePage.js",["42","43","44"],"import React, { Component } from \"react\";\nimport \"./GamePage.css\";\nimport Questions from \"./Questions.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nvar number = 0;\nvar isCorrect = true;\n\nfunction GamePage() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/gamepage/easy\" exact component={Questions} />\n          <Route path=\"/gamepage/medium\" exact component={Questions} />\n          <Route path=\"/gamepage/hard\" exact component={Questions} />\n          <Route path=\"/gamepage\" exact>\n            {Options()}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Options() {\n  return (\n    <div>\n      <div className=\"selection\">\n        <h1> Please select the difficulty you want</h1>\n      </div>\n      <div className=\"level_buttons\">\n        <nav>\n          <Link to=\"/gamepage/easy\">\n            <button type=\"button\" className='easyButton'>Easy</button>\n          </Link>\n        </nav>\n        <nav>\n          <Link to=\"/gamepage/medium\">\n            <button type=\"button\" className='mediumButton'>Medium</button>\n          </Link>\n        </nav>\n        <nav>\n          <Link to=\"/gamepage/hard\">\n            <button type=\"button\" className='hardButton'>Hard</button>\n          </Link>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default GamePage;\n","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/Questions.js",["45","46"],"import React, { Component, Fragment } from \"react\";\nimport Answers from \"./Answers\";\nimport Home from \"./App\";\nimport Correct from \"./CorrectAnswer\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { renderToString } from 'react-dom/server';\n\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionEasyList: [],\n      questionMediumList: [],\n      questionHardList: [],\n      number: 0,\n      level: undefined,\n    };\n  }\n\n  componentDidMount() {\n    var easyURL =\n      \"https://opentdb.com/api.php?amount=15&category=9&difficulty=easy&type=multiple\";\n    var mediumURL =\n      \"https://opentdb.com/api.php?amount=15&category=9&difficulty=medium&type=multiple\";\n    var hardURL =\n      \"https://opentdb.com/api.php?amount=15&difficulty=hard&type=multiple\";\n\n    // Puts the information for the easyURL, medium, and hard respectively\n    fetch(easyURL)\n      .then((response) => response.json())\n      .then((data) => this.setState({ questionEasyList: data.results }));\n    fetch(mediumURL)\n      .then((response) => response.json())\n      .then((data) => this.setState({ questionMediumList: data.results }));\n    fetch(hardURL)\n      .then((response) => response.json())\n      .then((data) => this.setState({ questionHardList: data.results }));\n  }\n\n  questionUsefulInfo(question, correct_answer, answer2, answer3, answer4) {\n    var answer = [question, correct_answer, answer2, answer3, answer4];\n    return answer;\n  }\n\n  answer() {\n    var questionInfo = this.state.questionEasyList.map((question) =>\n      this.questionUsefulInfo(\n        question.question,\n        question.correct_answer,\n        question.incorrect_answers[0],\n        question.incorrect_answers[1],\n        question.incorrect_answers[2]\n      )\n    );\n    return questionInfo;\n  }\n\n  findQuestion(questionList) {\n    return questionList[this.state.number];\n  }\n\n  findAnswers(question) {\n    return question[0];\n  }\n\n  QuestionDisplay(questionList) {\n    var question = this.findQuestion(questionList);\n    var answer1 = question;\n    if (!question) {\n      return <span>Loading...</span>;\n    }\n    var actualQuestion = question[0];\n\n    var answer1 = (\n      <Answers letter=\"A\" text={question[1]} correct=\"true\"></Answers>\n    );\n    var answer2 = (\n      <Answers letter=\"B\" text={question[2]} correct=\"false\"></Answers>\n    );\n    var answer3 = (\n      <Answers letter=\"C\" text={question[3]} correct=\"false\"></Answers>\n    );\n    var answer4 = (\n      <Answers letter=\"D\" text={question[4]} correct=\"false\"></Answers>\n    );\n\n    return (\n      <div className=\"Game\">\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/gamepage/gameOver\" exact render={() => (\n                                                                  <div className=\"overPage\">\n                                                                    <div className=\"gameover\">Game Over</div>\n                                                                    <div className=\"numAnswered\">You answered {this.state.number}/15 questions correctly</div>\n                                                                    <nav><Link to=\"\">\n                                                                      <button type=\"button\" className=\"homeButton\">Return to Home</button>\n                                                                    </Link></nav>\n                                                                  </div>\n                                                                  )} />\n            <Route path=\"/gamepage/correct\" exact render={() => (\n                                                                <div className=\"correctPage\">\n                                                                  <div className=\"correctMessage\">Correct!</div>\n                                                                  <nav><Link to=\"\"> <button type=\"button\" className=\"homeButton\">Return to Home</button>\n                                                                  </Link></nav>\n                                                                  <nav><Link to=\"/gamepage/easy/next\"> <button type=\"button\" className=\"nextQ\">Next Question</button>\n                                                                  </Link></nav>\n                                                                </div>\n                                                                )}/>\n            <Route path=\"/gamepage/easy\" exact>\n              <div className=\"question\">\n                Question {this.state.number}: {actualQuestion}{\" \"}\n              </div>\n              <div className=\"answers\">\n                <nav>\n                  <Link to=\"/gamepage/correct\">\n                    <div className=\"answer1\">{answer1}</div>\n                  </Link>\n                </nav>\n                <nav>\n                  <Link to=\"/gamepage/gameOver\">\n                    <div className=\"answer2\">{answer2}</div>\n                  </Link>\n                </nav>\n                <nav>\n                  <Link to=\"/gamepage/gameOver\">\n                    <div className=\"answer3\">{answer3}</div>\n                  </Link>\n                </nav>\n                <nav>\n                  <Link to=\"/gamepage/gameOver\">\n                    <div className=\"answer4\"><Fragment>{answer4}</Fragment></div>\n                  </Link>\n                </nav>\n              </div>\n            </Route>\n            <Route path=\"/gamepage/easy/next\" exact component={Correct} />\n            <Route path=\"\" exact component={Home} />\n          </Switch>\n        </Router>\n      </div>\n      </div>\n    );\n  }\n\n  refreshPage(){ \n    window.location.href=\"\"; \n  }\n\n  correct() {\n    <div>\n      <h1>Correct!</h1>\n    </div>\n  }\n\n  gameOver() {\n    <div className=\"gameover\">\n        <h1>gameover</h1>\n    </div>\n  }\n\n  render() {\n    var questionList = this.answer();\n    return this.QuestionDisplay(questionList);\n  }\n}\n\nexport default Questions;\n","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/Answers.js",["47"],"import React, { Component } from \"react\";\n\nexport default class Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      letter: undefined,\n      text: props.text,\n      correct_answer: props.correct,\n      clicked: false,\n    };\n  }\n\n  render() {\n    var letter = this.state.letter;\n\n    return (\n      <div className=\"answers\">\n        <button>\n          {this.state.letter}\n          {this.state.text}\n        </button>\n      </div>\n    );\n  }\n}\n","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/CorrectAnswer.js",["48","49","50","51"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction CorrectAnswer() {\n    \n    return (\n    <div>\n      Next Question\n    </div>\n  );\n}\n\nexport default CorrectAnswer;\n","/Users/rithwikmylavarapu/Documents/QuizGame/quiz_game/quiz_game_react/src/blobButton.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":68,"column":9,"nodeType":"58","endLine":68,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":6,"column":5,"nodeType":"61","messageId":"62","endLine":6,"endColumn":11},{"ruleId":"59","severity":1,"message":"64","line":7,"column":5,"nodeType":"61","messageId":"62","endLine":7,"endColumn":14},{"ruleId":"59","severity":1,"message":"65","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":75,"column":9,"nodeType":"61","messageId":"68","endLine":75,"endColumn":16},{"ruleId":"59","severity":1,"message":"69","line":15,"column":9,"nodeType":"61","messageId":"62","endLine":15,"endColumn":15},{"ruleId":"59","severity":1,"message":"70","line":2,"column":27,"nodeType":"61","messageId":"62","endLine":2,"endColumn":33},{"ruleId":"59","severity":1,"message":"71","line":2,"column":35,"nodeType":"61","messageId":"62","endLine":2,"endColumn":41},{"ruleId":"59","severity":1,"message":"72","line":2,"column":43,"nodeType":"61","messageId":"62","endLine":2,"endColumn":48},{"ruleId":"59","severity":1,"message":"73","line":2,"column":50,"nodeType":"61","messageId":"62","endLine":2,"endColumn":54},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'number' is assigned a value but never used.","'isCorrect' is assigned a value but never used.","'renderToString' is defined but never used.","no-redeclare","'answer1' is already defined.","redeclared","'letter' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]